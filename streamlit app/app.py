import streamlit as st

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Entrenador para Placa ESP32",
    page_icon="üîå",
    layout="wide"
)

# Estilo CSS para el fondo azul oscuro
st.markdown("""
<style>
    .reportview-container {
        background: #001f3f;  /* Color de fondo azul oscuro */
    }
    .sidebar .sidebar-content {
        background: #001f3f;  /* Color de fondo de la barra lateral */
    }
    .stApp {
        background-color: #001f3f;  /* Color de fondo de la aplicaci√≥n */
        color: #FFFFFF;  /* Color del texto */
    }
    h1 {
        text-align: center;  /* Centrar el t√≠tulo */
        font-size: 4em;  /* Aumentar el tama√±o del t√≠tulo */
        color: #FFD700;  /* Color dorado para el t√≠tulo */
    }
    h2 {
        color: #FF0000;  /* Color rojo para subt√≠tulos de metodolog√≠a */
        text-align: center;  /* Centrar subt√≠tulos */
    }
    h3 {
        color: #FFD700;  /* Color dorado para otros t√≠tulos */
        text-align: center;  /* Centrar otros t√≠tulos */
    }
    .section-divider {
        border-bottom: 2px solid #FFFFFF;  /* L√≠nea divisoria blanca */
        margin: 20px 0;  /* Margen superior e inferior */
    }
</style>
""", unsafe_allow_html=True)

# Men√∫ lateral
st.sidebar.title("Men√∫")
menu_options = ["Inicio", "Metodolog√≠a", "Resultados", "Conclusiones", "Contacto"]
selection = st.sidebar.radio("Selecciona una secci√≥n:", menu_options)

# Contenido seg√∫n la selecci√≥n del men√∫
if selection == "Inicio":
    st.title("Entrenador para Placa ESP32 üîå")
    st.write("Este proyecto consiste en el dise√±o y creaci√≥n de un PCB (Placa de Circuito Impreso) que permite la conexi√≥n de un microcontrolador ESP32 con dos sensores: un sensor DHT11 para medir la temperatura y la humedad, y un sensor de luminosidad. El objetivo es monitorear y controlar las condiciones ambientales en tiempo real, mostrando los datos en una pantalla OLED y en ThinkSpeak.")

    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)

    col1, col2 = st.columns(2)

    with col1:
        st.write("**üë• Integrantes:**")
        st.write("Juli√°n David Granados G√≥mez")
        st.write("Natalia Serrano Ardila")
        st.write("Angie Tatiana Silva Higuera")

    with col2:
        st.write("**üë®‚Äçüè´ Docente:**")
        st.write("Yuli Andrea Alvarez Pizarro")
        st.write("**üìö Espacio Acad√©mico:** Electr√≥nica Digital 2024-2")

    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)

    st.header("Componentes Electr√≥nicos üõ†Ô∏è")
    st.write("""
    - **ESP32**
    - **Sensor DHT11** (Temperatura y Humedad)
    - **Pantalla OLED 0.96"**
    - **Fotorresistencia (LDR)**
    - **Resistencias**
    """)

    col1, col2 = st.columns(2)

    with col1:
        if st.button("Ver Imagen Componentes Electr√≥nicos"):
            if 'show_image' not in st.session_state:
                st.session_state.show_image = False
            st.session_state.show_image = not st.session_state.show_image
            if st.session_state.show_image:
                st.image("componentes electronicos.png", caption="Componentes Electr√≥nicos", use_container_width=True)

    with col2:
        st.write("**Herramientas de Software üíª**")
        st.write("""
        - **Arduino IDE**: Para programar el ESP32.
        - **EasyEDA**: Para dise√±ar el PCB.
        - **Streamlit**: Para crear la interfaz web.
        - **ThingSpeak**: Para visualizaci√≥n de datos en la nube.
        """)

elif selection == "Metodolog√≠a":
    st.header("Metodolog√≠a üìö")
    
    st.markdown('<h2 style="color: #FFD700; text-align: center;">Diagrama del Circuito üì∑</h2>', unsafe_allow_html=True)
    
    st.write("**Objetivo:** Validar el funcionamiento del circuito y la correcta conexi√≥n de los componentes.")
    
    if st.button("Ver Imagen del Diagrama"):
        if 'show_diagram' not in st.session_state:
            st.session_state.show_diagram = False
        st.session_state.show_diagram = not st.session_state.show_diagram
        if st.session_state.show_diagram:
            st.image("diagrama.png", caption="Diagrama del circuito con ESP32, sensores y pantalla OLED", use_container_width=True)

    st.write("""
    **Pasos y Herramientas Utilizadas:**
    - Se realiz√≥ un diagrama esquem√°tico del circuito.
    - Se utilizaron herramientas como Fritzing para el dise√±o inicial.
    - Se valid√≥ la conexi√≥n de los componentes en una protoboard antes de la soldadura.
    """)

    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)

    st.header("Montaje en Protoboard üîß")
    st.write("""
    En esta secci√≥n, se explica c√≥mo se realiz√≥ el montaje del circuito en una protoboard. Se utiliz√≥ un c√≥digo en Arduino para probar el funcionamiento de los sensores y la pantalla OLED.
    **Pasos:**
    - Conectar los componentes seg√∫n el diagrama.
    - Probar el c√≥digo en Arduino para verificar el funcionamiento.
    """)

    if st.button("C√≥digo de Arduino"):
        st.file_uploader("Sube tu c√≥digo de Arduino aqu√≠", type=["ino"])

    if st.button("Ver Video Funcionamiento Protoboard"):
        if 'show_video_protoboard' not in st.session_state:
            st.session_state.show_video_protoboard = False
        st.session_state.show_video_protoboard = not st.session_state.show_video_protoboard
        if st.session_state.show_video_protoboard:
            st.video("video funcionamiento protoboard.mp4")

    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)

    st.header("Dise√±o de PCB üñ•Ô∏è")
    if st.button("Ver Imagen del Diagrama de PCB"):
        if 'show_pcb' not in st.session_state:
            st.session_state.show_pcb = False
        st.session_state.show_pcb = not st.session_state.show_pcb
        if st.session_state.show_pcb:
            st.image("dise√±o pcb.png", caption="Dise√±o de PCB", use_container_width=True)

    if st.button("Ver Imagen EasyEDA"):
        if 'show_easyeda' not in st.session_state:
            st.session_state.show_easyeda = False
        st.session_state.show_easyeda = not st.session_state.show_easyeda
        if st.session_state.show_easyeda:
            st.image("easyeda.png", caption="EasyEDA Dise√±o", use_container_width=True)

    st.write("""
    **Pasos:**
    - Dise√±ar el PCB en EasyEDA.
    - Exportar el dise√±o para la fabricaci√≥n.
    """)

    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)

    st.header("Soldadura e Implementaci√≥n de Sensores üî©")
    st.write("""
    En esta secci√≥n, se detalla el proceso de soldadura de los componentes en el PCB y la implementaci√≥n de los sensores.
    **Pasos:**
    - Soldar los componentes en el PCB siguiendo el dise√±o.
    - Verificar las conexiones antes de encender el dispositivo.
    """)

    if st.button("Ver componentes soldados"):
        if 'show_soldered_components' not in st.session_state:
            st.session_state.show_soldered_components = False
        st.session_state.show_soldered_components = not st.session_state.show_soldered_components
        if st.session_state.show_soldered_components:
            st.image("componentes soldados.jpg", caption="Resultado Final", use_container_width=True)

    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)

    st.header("Creaci√≥n de Carcasa üè†")
    st.write("""
    Se dise√±√≥ una carcasa utilizando SolidWorks para proteger el controlador. La carcasa fue hecha a medida para adaptarse perfectamente al PCB y los componentes.
    **Pasos:**
    - Dise√±ar la carcasa en SolidWorks.
    - Imprimir la carcasa en 3D.
    """)

    if st.button("Ver Imagen Planos de Carcasa"):
        if 'show_case_plans' not in st.session_state:
            st.session_state.show_case_plans = False
        st.session_state.show_case_plans = not st.session_state.show_case_plans
        if st.session_state.show_case_plans:
            st.image("planos de carcasa.jpg", caption=" Planos de Carcasa", use_container_width=True)

    if st.button("Ver Imagen Impresi√≥n 3D de la Carcasa"):
        if 'show_3d_case' not in st.session_state:
            st.session_state.show_3d_case = False
        st.session_state.show_3d_case = not st.session_state.show_3d_case
        if st.session_state.show_3d_case:
            st.image("impresion 3d carcasa.jpg", caption="Impresi√≥n 3D de la Carcasa", use_container_width=True)

    st.markdown('<div class="section-divider"></div>', unsafe_allow_html=True)

    st.header("Env√≠o de Datos a ThingSpeak üìä")
    st.write("""
    En esta secci√≥n, se explica c√≥mo se env√≠an los datos recolectados por los sensores a la plataforma ThingSpeak. ThingSpeak es una plataforma de IoT que permite la visualizaci√≥n y an√°lisis de datos en tiempo real. 
    Al utilizar ThingSpeak, podemos monitorear las condiciones ambientales desde cualquier lugar a trav√©s de su interfaz web.

    **Pasos para el env√≠o de datos:**
    - Configurar la cuenta en ThingSpeak y crear un canal para recibir los datos.
    - Utilizar la API de ThingSpeak para enviar los datos desde el ESP32.
    - Visualizar los datos en gr√°ficos y tablas en la plataforma.

    **Importancia de ThingSpeak:**
    - Permite el almacenamiento y an√°lisis de datos a largo plazo.
    - Facilita la creaci√≥n de alertas y notificaciones basadas en los datos recolectados.
    - Proporciona una interfaz amigable para la visualizaci√≥n de datos, lo que facilita la toma de decisiones informadas.

    Si deseas ver c√≥mo se ven los datos en ThingSpeak, puedes hacer clic en el bot√≥n a continuaci√≥n.
    """)

    if st.button("Ver Imagen Datos en ThingSpeak"):
        if 'show_thinkspeak_data' not in st.session_state:
            st.session_state.show_thinkspeak_data = False
        st.session_state.show_thinkspeak_data = not st.session_state.show_thinkspeak_data
        if st.session_state.show_thinkspeak_data:
            st.image("datos en thinkspeak.jpg", caption="Datos en ThingSpeak", use_container_width=True)

elif selection == "Resultados":
    st.header("Resultados üìà")
    st.write("""
    En esta secci√≥n se presentan los resultados finales del proyecto, incluyendo la carcasa y el prototipo final.
    """)

    if st.button("Ver Imagen Carcasa Final"):
        if 'show_carcasa_final' not in st.session_state:
            st.session_state.show_carcasa_final = False
        st.session_state.show_carcasa_final = not st.session_state.show_carcasa_final
        if st.session_state.show_carcasa_final:
            st.image("carcasa final.jpg", caption="Carcasa Final", use_container_width=True)

    if st.button("Ver Imagen Prototipo Final"):
        if 'show_prototipo_final' not in st.session_state:
            st.session_state.show_prototipo_final = False
        st.session_state.show_prototipo_final = not st.session_state.show_prototipo_final
        if st.session_state.show_prototipo_final:
            st.image("prototipo final.jpg", caption="Prototipo Final", use_container_width=True)

    if st.button("Ver Video Funcionamiento Prototipo Final"):
        if 'show_video_prototipo_final' not in st.session_state:
            st.session_state.show_video_prototipo_final = False
        st.session_state.show_video_prototipo_final = not st.session_state.show_video_prototipo_final
        if st.session_state.show_video_prototipo_final:
            st.video("funcionamiento prototipo final.mp4")

elif selection == "Conclusiones":
    st.header("Conclusiones üéâ")
    st.write("""
    - El proyecto demostr√≥ la viabilidad de utilizar el ESP32 para el monitoreo ambiental.
    - La integraci√≥n de sensores y la visualizaci√≥n de datos en tiempo real son efectivas.
    - La carcasa dise√±ada proporciona una protecci√≥n adecuada para el hardware.
    - La experiencia adquirida en el dise√±o y la implementaci√≥n de este proyecto es invaluable para futuros desarrollos.
    - ¬°Estamos emocionados por las posibilidades que ofrece esta tecnolog√≠a! üöÄ
    """)

    if st.button("Descargar Manual de Usuario"):
        with open("manual de usuario.pdf", "rb") as f:
            st.download_button("Descargar", f, file_name="manual de usuario.pdf", mime="application/pdf")

elif selection == "Contacto":
    st.header("Contacto üìû")
    st.write("""
    Si deseas realizar un proyecto similar o tienes alguna pregunta, no dudes en contactarnos:
    - **Juli√°n David Granados G√≥mez**: julian@example.com
    - **Natalia Serrano Ardila**: natalia@example.com
    - **Angie Tatiana Silva Higuera**: angie@example.com
    """)

    st.write("¬°Gracias por visitar nuestro proyecto! Si tienes alguna duda o comentario, no dudes en escribirnos.")